component: regproc
part-of: mosip
activeProfileEnv: mz 
springConfigLabel: {{ config_repo.version }} 
configServerUrl: {{ config_server.internal_url }}
storageClass: dm-storage-class  # See sc, pv templates
exportLogs: enabled  # Let filebeat export the logs

sitePublicUrl: {{ site.sandbox_public_url }}
probe:
  initialDelay: 180 # Seconds
  period: 30 # Seconds

ingress:
   namespace: default

artifactoryUrl: {{ artifactory_url }} 
iamAdapterUrl: {{ iam_adapter_regproc_url }}

imagePullPolicy: Always 

isGlowroot: {{ is_glowroot }} 

dockerHub:
  private: {{ docker.hub.private }}  
  keyname: {{ docker.hub.keyname }}

services:
  camel:
    serviceName: regproc-camel-stage
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5723
      hazelcastPort: 5701
      containerPort: 8022
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/camelbridge/actuator/health
    podconfig:
      {{ podconfig.regproc.camel | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  notification:  # This is has a service front end for access (notification-svc.yaml)
    serviceName: regproc-securezone-notification-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5712
      hazelcastPort: 5701
      containerPort: 8090
      servicePort: 80 
    ingressPath: /registrationprocessor/v1/securezone/
    healthUrl: /registrationprocessor/v1/securezone/actuator/health
    podconfig:
      {{ podconfig.regproc.notification | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  reprocess:
    serviceName: regproc-reprocessor-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5750
      hazelcastPort: 5701
      containerPort: 8021
      eventUpdateEventBusPort: 5751
      eventUpdateServerPort: 8024
      workflowActionEventBusPort: 5752
      workflowActionServerPort: 8023
      servicePort: 80
    ingressPath: /registrationprocessor/v1/reprocessor/ 
    healthUrl: /registrationprocessor/v1/reprocessor/actuator/health
    podconfig:
      {{ podconfig.regproc.reprocess | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  uploader:
    serviceName: regproc-packet-uploader-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5714
      hazelcastPort: 5701
      containerPort: 8087
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/uploader/actuator/health
    podconfig:
      {{ podconfig.regproc.uploader | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  quality:
    serviceName: regproc-quality-checker-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5727
      hazelcastPort: 5701
      containerPort: 9072
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/qualitychecker/actuator/health
    podconfig:
      {{ podconfig.regproc.quality | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  validator:
    serviceName: regproc-packet-validator-stage
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5715
      hazelcastPort: 5701
      containerPort: 8088
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/packetvalidator/actuator/health
    podconfig:
      {{ podconfig.regproc.validator | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  osi:
    serviceName: regproc-osi-validator-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5716
      hazelcastPort: 5701
      containerPort: 8089
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/osivalidator/actuator/health
    podconfig:
      {{ podconfig.regproc.osi | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  demo:
    serviceName: regproc-demo-dedupe-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5717
      hazelcastPort: 5701
      containerPort: 8091
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/demodedupe/actuator/health
    podconfig:
      {{ podconfig.regproc.demo | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  bio:
    serviceName: regproc-bio-dedupe-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5718
      hazelcastPort: 5701
      containerPort: 9096
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/biodedupe/actuator/health
    podconfig:
      {{ podconfig.regproc.bio | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  bioauth:
    serviceName: regproc-biometric-authentication-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5777
      hazelcastPort: 5701
      containerPort: 8020
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/bioauth/actuator/health
    podconfig:
      {{ podconfig.regproc.bioauth | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  abishandler:
    serviceName: regproc-abis-handler-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5726
      hazelcastPort: 5701
      containerPort: 9071
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/abishandler/actuator/health
    podconfig:
      {{ podconfig.regproc.abishandler | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  abismid:
    serviceName: regproc-abis-middleware-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5888
      hazelcastPort: 5701
      containerPort: 8091
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/abismiddleware/actuator/health
    podconfig:
      {{ podconfig.regproc.abismid | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  manual:
    serviceName: regproc-manual-verification-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5720
      hazelcastPort: 5701
      containerPort: 8084
      servicePort: 80
    ingressPath: /registrationprocessor/v1/manualverification/
    healthUrl: /registrationprocessor/v1/manualverification/actuator/health
    podconfig:
      {{ podconfig.regproc.manual | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  external:
    serviceName: regproc-external-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5736
      hazelcastPort: 5701
      containerPort: 8095
    ingressPath: ''
    healthUrl: /registrationprocessor/v1/external/actuator/health 
    podconfig:
      {{ podconfig.regproc.external | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  eis: 
    serviceName: regproc-external-integration-service 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      containerPort: 8201
      servicePort: 80
    ingressPath: /registrationprocessor/v1/eis
    healthUrl: /registrationprocessor/v1/eis/actuator/health
    podconfig:
      {{ podconfig.regproc.eis | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  uin:
    serviceName: regproc-uin-generator-stage
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5719
      hazelcastPort: 5701
      containerPort: 8099
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/uin-generator/actuator/health
    podconfig:
      {{ podconfig.regproc.uin | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  msg:
    serviceName: regproc-message-sender-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5721
      hazelcastPort: 5701
      containerPort: 8088
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/sender-stage/actuator/health
    podconfig:
      {{ podconfig.regproc.msg | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  print:
    serviceName: regproc-printing-stage 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      eventbusPort: 5722
      hazelcastPort: 5701
      containerPort: 8099
    ingressPath: '' 
    healthUrl: /registrationprocessor/v1/print-stage/actuator/health
    podconfig:
      {{ podconfig.regproc.print | to_nice_yaml(indent=6) | indent(6) }}
    jarUrl:

  trans:
    serviceName: regproc-registration-transaction-service 
    dockerImage: {{ versions.services.regproc.vertex }}
    ports:
      containerPort: 8110
      servicePort: 80
    ingressPath: /registrationprocessor/v1/registrationtransaction/
    healthUrl: /registrationprocessor/v1/registrationtransaction/actuator/health
    podconfig:
      {{ podconfig.regproc.trans | to_nice_yaml(indent=6) | indent(6) }}

  notificationService:  # This is has a service front end for access (notification-service-svc.yaml)
    serviceName: {{ versions.services.regproc.notificationService.keys()[0] }} 
    dockerImage: {{ versions.services.regproc.notificationService.values()[0] }}
    ports:
      containerPort: 8088
      servicePort: 80 
    ingressPath: /registrationprocessor/v1/notification/
    healthUrl: /registrationprocessor/v1/notification/actuator/health
    podconfig:
      {{ podconfig.regproc.notificationService | to_nice_yaml(indent=6) | indent(6) }}
